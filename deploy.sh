#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

SERVER_HOST="81.200.147.68"
SERVER_USER="root"
SERVER_PATH="/opt/freighthub"
SSH_KEY="$HOME/.ssh/freighthub_deploy"

echo -e "${GREEN}üöÄ FreightHub Auto Deploy${NC}"
echo "================================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ SSH –∫–ª—é—á–∞
if [ ! -f "${SSH_KEY}" ]; then
    echo -e "${RED}‚ùå SSH key not found: ${SSH_KEY}${NC}"
    echo ""
    echo "Please create SSH key first:"
    echo -e "${YELLOW}  ssh-keygen -t rsa -b 4096 -f ~/.ssh/freighthub_deploy${NC}"
    echo -e "${YELLOW}  ssh-copy-id -i ~/.ssh/freighthub_deploy.pub ${SERVER_USER}@${SERVER_HOST}${NC}"
    echo ""
    echo "See QUICKSTART_AUTO_DEPLOY.md for details"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f .env ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  .env file not found!${NC}"
    echo "Creating from .env.example..."
    cp .env.example .env
    echo -e "${YELLOW}Please edit .env file and add your BOT_TOKEN${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É
echo -e "${GREEN}üì° Checking server connection...${NC}"
if ! ssh -i ${SSH_KEY} -o ConnectTimeout=5 ${SERVER_USER}@${SERVER_HOST} "echo 'Connected'" &>/dev/null; then
    echo -e "${RED}‚ùå Cannot connect to server ${SERVER_HOST}${NC}"
    echo "Please check your SSH connection and key: ${SSH_KEY}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Server connection OK${NC}"

# –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo -e "${GREEN}üìÅ Creating directory on server...${NC}"
ssh -i ${SSH_KEY} ${SERVER_USER}@${SERVER_HOST} "mkdir -p ${SERVER_PATH}"

# –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä
echo -e "${GREEN}üì¶ Copying files to server...${NC}"
rsync -avz --progress \
    -e "ssh -i ${SSH_KEY}" \
    --exclude 'database/*.db' \
    --exclude 'database/*.sqlite' \
    --exclude 'venv/' \
    --exclude '__pycache__/' \
    --exclude '*.pyc' \
    --exclude '.git/' \
    --exclude '.DS_Store' \
    ./ ${SERVER_USER}@${SERVER_HOST}:${SERVER_PATH}/

# –ö–æ–ø–∏—Ä—É–µ–º .env —Ñ–∞–π–ª
echo -e "${GREEN}üîê Copying .env file...${NC}"
scp -i ${SSH_KEY} .env ${SERVER_USER}@${SERVER_HOST}:${SERVER_PATH}/.env

# –ó–∞–ø—É—Å–∫–∞–µ–º Docker Compose –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo -e "${GREEN}üê≥ Starting Docker containers...${NC}"
ssh -i ${SSH_KEY} ${SERVER_USER}@${SERVER_HOST} << 'ENDSSH'
    cd /opt/freighthub
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    docker-compose down
    
    # –°–æ–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–µ –æ–±—Ä–∞–∑—ã
    docker-compose build
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    docker-compose up -d
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
    echo ""
    echo "================================"
    docker-compose ps
    echo "================================"
ENDSSH

echo ""
echo -e "${GREEN}‚úÖ Deployment completed!${NC}"
echo ""
echo "Services are running on:"
echo -e "  ü§ñ Telegram Bot: http://${SERVER_HOST}:8080/webhook/health"
echo -e "  üåê WebApp: http://${SERVER_HOST}"
echo ""
echo "To view logs:"
echo -e "  ${YELLOW}ssh ${SERVER_USER}@${SERVER_HOST} 'cd ${SERVER_PATH} && docker-compose logs -f'${NC}"
echo ""
echo "To stop services:"
echo -e "  ${YELLOW}ssh ${SERVER_USER}@${SERVER_HOST} 'cd ${SERVER_PATH} && docker-compose down'${NC}"
