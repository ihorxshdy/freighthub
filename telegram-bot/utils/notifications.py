"""
–£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
"""
from aiogram import Bot
from database.models import get_user_by_id, get_all_drivers, get_bid_participants
from bot.config import get_truck_display_name
from bot.webapp_config import WEBAPP_URL


from typing import Optional

async def notify_drivers_new_order(bot: Bot, order_id: int, truck_type: str, cargo_description: str, delivery_address: str, max_price: Optional[float] = None):
    """
    –£–≤–µ–¥–æ–º–ª—è–µ—Ç –≤—Å–µ—Ö –≤–æ–¥–∏—Ç–µ–ª–µ–π –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ
    
    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
        order_id: ID –∑–∞—è–≤–∫–∏
        truck_type: –¢–∏–ø –º–∞—à–∏–Ω—ã
        cargo_description: –û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–∑–∞
        delivery_address: –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏
        max_price: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å None)
    """
    drivers = await get_all_drivers()
    truck_name = get_truck_display_name(truck_type)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    price_text = f"**–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞:** {max_price} —Ä—É–±.\n" if max_price else ""
    
    message_text = (
        f"üöö **–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ #{order_id}**\n\n"
        f"**–¢–∏–ø –º–∞—à–∏–Ω—ã:** {truck_name}\n"
        f"**–ì—Ä—É–∑:** {cargo_description}\n"
        f"**–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:** {delivery_address}\n"
        f"{price_text}"
        f"‚è± –ê—É–∫—Ü–∏–æ–Ω –¥–ª–∏—Ç—Å—è 30 –º–∏–Ω—É—Ç!\n"
        f"–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É—á–∞—Å—Ç–∏—è üëá"
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º –≤–æ–¥–∏—Ç–µ–ª—è–º
    sent_count = 0
    for driver in drivers:
        try:
            await bot.send_message(
                chat_id=driver['telegram_id'],
                text=message_text
            )
            sent_count += 1
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤–æ–¥–∏—Ç–µ–ª—é {driver['id']}: {str(e)}")
    
    print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∑–∞—è–≤–∫–µ #{order_id}: {sent_count} –∏–∑ {len(drivers)}")
    return sent_count


async def notify_auction_winner(bot: Bot, order_id: int, winner_user_id: int, winning_price: float, cargo_description: str, delivery_address: str, customer_phone: str):
    """
    –£–≤–µ–¥–æ–º–ª—è–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –∞—É–∫—Ü–∏–æ–Ω–∞
    
    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
        order_id: ID –∑–∞—è–≤–∫–∏
        winner_user_id: ID –ø–æ–±–µ–¥–∏—Ç–µ–ª—è (user_id –≤ –ë–î)
        winning_price: –í—ã–∏–≥—Ä—ã—à–Ω–∞—è —Ü–µ–Ω–∞
        cargo_description: –û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–∑–∞
        delivery_address: –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏
        customer_phone: –¢–µ–ª–µ—Ñ–æ–Ω –∑–∞–∫–∞–∑—á–∏–∫–∞
    """
    winner = await get_user_by_id(winner_user_id)
    
    if not winner:
        print(f"–ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–±–µ–¥–∏—Ç–µ–ª—å —Å ID {winner_user_id}")
        return False
    
    message_text = (
        f"üéâ **–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –∞—É–∫—Ü–∏–æ–Ω!**\n\n"
        f"**–ó–∞—è–≤–∫–∞ #{order_id}**\n"
        f"**–ì—Ä—É–∑:** {cargo_description}\n"
        f"**–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:** {delivery_address}\n"
        f"**–í–∞—à–∞ —Ü–µ–Ω–∞:** {winning_price} —Ä—É–±.\n\n"
        f"üìû **–¢–µ–ª–µ—Ñ–æ–Ω –∑–∞–∫–∞–∑—á–∏–∫–∞:** {customer_phone}\n\n"
        f"–°–≤—è–∂–∏—Ç–µ—Å—å —Å –∑–∞–∫–∞–∑—á–∏–∫–æ–º –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π!"
    )
    
    try:
        await bot.send_message(
            chat_id=winner['telegram_id'],
            text=message_text
        )
        print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª—é –∑–∞—è–≤–∫–∏ #{order_id}")
        return True
    except Exception as e:
        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª—é: {str(e)}")
        return False


async def notify_auction_losers(bot: Bot, order_id: int, winner_user_id: int, cargo_description: str):
    """
    –£–≤–µ–¥–æ–º–ª—è–µ—Ç –ø—Ä–æ–∏–≥—Ä–∞–≤—à–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∞—É–∫—Ü–∏–æ–Ω–∞
    
    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
        order_id: ID –∑–∞—è–≤–∫–∏
        winner_user_id: ID –ø–æ–±–µ–¥–∏—Ç–µ–ª—è (—á—Ç–æ–±—ã –∏—Å–∫–ª—é—á–∏—Ç—å –∏–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π)
        cargo_description: –û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–∑–∞
    """
    participants = await get_bid_participants(order_id)
    
    if not participants:
        print(f"–ù–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –∑–∞—è–≤–∫–∏ #{order_id}")
        return 0
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
    losers = [p for p in participants if p['user_id'] != winner_user_id]
    
    message_text = (
        f"‚ùå **–ê—É–∫—Ü–∏–æ–Ω –∑–∞–≤–µ—Ä—à–µ–Ω**\n\n"
        f"**–ó–∞—è–≤–∫–∞ #{order_id}**\n"
        f"**–ì—Ä—É–∑:** {cargo_description}\n\n"
        f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –±—ã–ª–æ –≤—ã–±—Ä–∞–Ω–æ.\n"
        f"–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤—ã–º–∏ –∑–∞—è–≤–∫–∞–º–∏!"
    )
    
    sent_count = 0
    for loser in losers:
        try:
            await bot.send_message(
                chat_id=loser['telegram_id'],
                text=message_text
            )
            sent_count += 1
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–æ–∏–≥—Ä–∞–≤—à–µ–º—É {loser['user_id']}: {str(e)}")
    
    print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–æ–∏–≥—Ä–∞–≤—à–∏–º –¥–ª—è –∑–∞—è–≤–∫–∏ #{order_id}: {sent_count} –∏–∑ {len(losers)}")
    return sent_count


async def notify_customer_no_bids(bot: Bot, order_id: int, customer_user_id: int, cargo_description: str):
    """
    –£–≤–µ–¥–æ–º–ª—è–µ—Ç –∑–∞–∫–∞–∑—á–∏–∫–∞ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
    
    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
        order_id: ID –∑–∞—è–≤–∫–∏
        customer_user_id: ID –∑–∞–∫–∞–∑—á–∏–∫–∞ (user_id –≤ –ë–î)
        cargo_description: –û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–∑–∞
    """
    customer = await get_user_by_id(customer_user_id)
    
    if not customer:
        print(f"–ù–µ –Ω–∞–π–¥–µ–Ω –∑–∞–∫–∞–∑—á–∏–∫ —Å ID {customer_user_id}")
        return False
    
    message_text = (
        f"‚è∞ **–ê—É–∫—Ü–∏–æ–Ω –∑–∞–≤–µ—Ä—à–µ–Ω**\n\n"
        f"**–ó–∞—è–≤–∫–∞ #{order_id}**\n"
        f"**–ì—Ä—É–∑:** {cargo_description}\n\n"
        f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç –≤–æ–¥–∏—Ç–µ–ª–µ–π.\n"
        f"–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É —Å –¥—Ä—É–≥–∏–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏."
    )
    
    try:
        await bot.send_message(
            chat_id=customer['telegram_id'],
            text=message_text
        )
        print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑—á–∏–∫—É –æ –∑–∞—è–≤–∫–µ #{order_id} –±–µ–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π")
        return True
    except Exception as e:
        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑—á–∏–∫—É: {str(e)}")
        return False


async def notify_customer_auction_complete(bot: Bot, order_id: int, customer_user_id: int, cargo_description: str, winning_price: float, driver_phone: str):
    """
    –£–≤–µ–¥–æ–º–ª—è–µ—Ç –∑–∞–∫–∞–∑—á–∏–∫–∞ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∞—É–∫—Ü–∏–æ–Ω–∞ –∏ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ
    
    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
        order_id: ID –∑–∞—è–≤–∫–∏
        customer_user_id: ID –∑–∞–∫–∞–∑—á–∏–∫–∞ (user_id –≤ –ë–î)
        cargo_description: –û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–∑–∞
        winning_price: –í—ã–∏–≥—Ä—ã—à–Ω–∞—è —Ü–µ–Ω–∞
        driver_phone: –¢–µ–ª–µ—Ñ–æ–Ω –≤–æ–¥–∏—Ç–µ–ª—è-–ø–æ–±–µ–¥–∏—Ç–µ–ª—è
    """
    customer = await get_user_by_id(customer_user_id)
    
    if not customer:
        print(f"–ù–µ –Ω–∞–π–¥–µ–Ω –∑–∞–∫–∞–∑—á–∏–∫ —Å ID {customer_user_id}")
        return False
    
    message_text = (
        f"‚úÖ **–ê—É–∫—Ü–∏–æ–Ω –∑–∞–≤–µ—Ä—à–µ–Ω!**\n\n"
        f"**–ó–∞—è–≤–∫–∞ #{order_id}**\n"
        f"**–ì—Ä—É–∑:** {cargo_description}\n"
        f"**–í—ã–∏–≥—Ä—ã—à–Ω–∞—è —Ü–µ–Ω–∞:** {winning_price} —Ä—É–±.\n\n"
        f"üìû **–¢–µ–ª–µ—Ñ–æ–Ω –≤–æ–¥–∏—Ç–µ–ª—è:** {driver_phone}\n\n"
        f"–°–≤—è–∂–∏—Ç–µ—Å—å —Å –≤–æ–¥–∏—Ç–µ–ª–µ–º –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –ø–µ—Ä–µ–≤–æ–∑–∫–∏!"
    )
    
    try:
        await bot.send_message(
            chat_id=customer['telegram_id'],
            text=message_text
        )
        print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑—á–∏–∫—É –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∞—É–∫—Ü–∏–æ–Ω–∞ #{order_id}")
        return True
    except Exception as e:
        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑—á–∏–∫—É: {str(e)}")
        return False
