from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from aiogram.filters import Command
from database.models import (
    get_user_by_telegram_id, get_active_orders, get_orders_by_customer,
    get_bids_by_driver, get_won_orders_by_driver
)
from bot.config import TRUCK_TYPES, ORDER_STATUS, get_truck_display_name
from bot.keyboards import get_customer_menu, get_driver_menu, get_webapp_menu
from bot.webapp_config import WEBAPP_URL
from datetime import datetime

router = Router()

@router.message(Command("help"))
async def help_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /help - —Å–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"""
    await message.answer(
        "‚ÑπÔ∏è **–°–ø—Ä–∞–≤–∫–∞ FreightHub**\n\n"
        "**–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:**\n\n"
        "üåê **–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ** - –∫–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n"
        "   ‚Ä¢ –ó–∞–∫–∞–∑—á–∏–∫–∏: —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏ —É–ø—Ä–∞–≤–ª—è–π—Ç–µ –∑–∞—è–≤–∫–∞–º–∏\n"
        "   ‚Ä¢ –í–æ–¥–∏—Ç–µ–ª–∏: –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –∑–∞—è–≤–∫–∏ –∏ –¥–µ–ª–∞–π—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è\n\n"
        "üí¨ **–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è** –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ —ç—Ç–æ—Ç —á–∞—Ç:\n"
        "   ‚Ä¢ –ù–æ–≤—ã–µ –∑–∞—è–≤–∫–∏ (–¥–ª—è –≤–æ–¥–∏—Ç–µ–ª–µ–π)\n"
        "   ‚Ä¢ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞—É–∫—Ü–∏–æ–Ω–æ–≤ (–ø–æ–±–µ–¥–∞/–ø—Ä–æ–∏–≥—Ä—ã—à)\n"
        "   ‚Ä¢ –°—Ç–∞—Ç—É—Å –≤–∞—à–∏—Ö –∑–∞—è–≤–æ–∫\n\n"
        "**–ö–æ–º–∞–Ω–¥—ã:**\n"
        "/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "/webapp - –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n"
        "/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n"
        "**–ü–æ–¥–¥–µ—Ä–∂–∫–∞:** @freighthub_support",
        reply_markup=get_webapp_menu()
    )

@router.message(F.text == "üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏")
async def my_orders_customer(message: Message):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞—è–≤–æ–∫ –∑–∞–∫–∞–∑—á–∏–∫–∞"""
    if not message.from_user:
        return
        
    user = await get_user_by_telegram_id(message.from_user.id)
    
    if not user or user['role'] != 'customer':
        await message.answer("‚ùå –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∑–∞–∫–∞–∑—á–∏–∫–∞–º!")
        return
    
    orders = await get_orders_by_customer(user['id'])
    
    if not orders:
        await message.answer("üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞—è–≤–æ–∫.")
        return
    
    response = "üìã **–í–∞—à–∏ –∑–∞—è–≤–∫–∏:**\n\n"
    
    for order in orders:
        truck_name = get_truck_display_name(order['truck_type'])
        status_name = ORDER_STATUS.get(order['status'], order['status'])
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º emoji –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞
        status_emoji = {
            'active': 'üü°',
            'completed': '‚úÖ', 
            'cancelled': '‚ùå',
            'no_offers': 'üî¥'
        }.get(order['status'], '‚ö™')
        
        response += f"{status_emoji} **–ó–∞—è–≤–∫–∞ #{order['id']}** ({status_name})\n"
        response += f"üöö {truck_name}\n"
        response += f"üì¶ {order['cargo_description'][:50]}{'...' if len(order['cargo_description']) > 50 else ''}\n"
        response += f"üìç {order['delivery_address'][:50]}{'...' if len(order['delivery_address']) > 50 else ''}\n"
        
        if order['winning_price'] and order['status'] == 'completed':
            response += f"ÔøΩ –í—ã–∏–≥—Ä—ã—à–Ω–∞—è —Ü–µ–Ω–∞: {order['winning_price']} —Ä—É–±.\n"
        
        response += f"üìÖ {order['created_at'][:16]}\n\n"
    
    # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏ –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ
    if len(response) > 4000:
        parts = []
        current_part = "üìã **–í–∞—à–∏ –∑–∞—è–≤–∫–∏:**\n\n"
        
        for order in orders:
            order_text = f"{status_emoji} **–ó–∞—è–≤–∫–∞ #{order['id']}** ({ORDER_STATUS.get(order['status'], order['status'])})\n"
            order_text += f"üöö {get_truck_display_name(order['truck_type'])}\n"
            order_text += f"üì¶ {order['cargo_description'][:30]}...\n\n"
            
            if len(current_part + order_text) > 3500:
                parts.append(current_part)
                current_part = order_text
            else:
                current_part += order_text
        
        if current_part:
            parts.append(current_part)
        
        for part in parts:
            await message.answer(part)
    else:
        await message.answer(response)

@router.message(F.text == "üöõ –í—ã–∏–≥—Ä–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏")
async def won_orders_driver(message: Message):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –≤—ã–∏–≥—Ä–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫ –≤–æ–¥–∏—Ç–µ–ª—è"""
    if not message.from_user:
        return
        
    user = await get_user_by_telegram_id(message.from_user.id)
    
    if not user or user['role'] != 'driver':
        await message.answer("‚ùå –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–æ–¥–∏—Ç–µ–ª—è–º!")
        return
    
    won_orders = await get_won_orders_by_driver(user['id'])
    
    if not won_orders:
        await message.answer("üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –≤—ã–∏–≥—Ä–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫.")
        return
    
    response = "üèÜ **–í–∞—à–∏ –≤—ã–∏–≥—Ä–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏:**\n\n"
    
    for order in won_orders:
        truck_name = get_truck_display_name(order['truck_type'])
        status_name = ORDER_STATUS.get(order['status'], order['status'])
        
        response += f"‚úÖ **–ó–∞—è–≤–∫–∞ #{order['id']}** ({status_name})\n"
        response += f"üöö {truck_name}\n"
        response += f"ÔøΩ {order['cargo_description'][:50]}{'...' if len(order['cargo_description']) > 50 else ''}\n"
        response += f"üìç {order['delivery_address'][:50]}{'...' if len(order['delivery_address']) > 50 else ''}\n"
        response += f"üí∞ –¶–µ–Ω–∞: {order['winning_price']} —Ä—É–±.\n"
        response += f"üìÖ {order['created_at'][:16]}\n\n"
    
    if len(response) > 4000:
        parts = []
        current_part = "üèÜ **–í–∞—à–∏ –≤—ã–∏–≥—Ä–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏:**\n\n"
        
        for order in won_orders:
            order_text = f"‚úÖ **–ó–∞—è–≤–∫–∞ #{order['id']}**\n"
            order_text += f"ÔøΩ {order['winning_price']} —Ä—É–±.\n\n"
            
            if len(current_part + order_text) > 3500:
                parts.append(current_part)
                current_part = order_text
            else:
                current_part += order_text
        
        if current_part:
            parts.append(current_part)
        
        for part in parts:
            await message.answer(part)
    else:
        await message.answer(response)

@router.message(F.text == "üí∞ –ú–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è")
async def my_bids_driver(message: Message):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –≤–æ–¥–∏—Ç–µ–ª—è"""
    if not message.from_user:
        return
        
    user = await get_user_by_telegram_id(message.from_user.id)
    
    if not user or user['role'] != 'driver':
        await message.answer("‚ùå –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–æ–¥–∏—Ç–µ–ª—è–º!")
        return
    
    bids = await get_bids_by_driver(user['id'])
    
    if not bids:
        await message.answer("üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π.")
        return
    
    response = "üí∞ **–í–∞—à–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:**\n\n"
    
    for bid in bids:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        if bid['order_status'] == 'completed':
            if bid['winner_driver_id'] == user['id']:
                status = "üèÜ –í—ã–∏–≥—Ä–∞–ª–∏!"
                status_emoji = "‚úÖ"
            else:
                status = "‚ùå –ü—Ä–æ–∏–≥—Ä–∞–ª–∏"
                status_emoji = "‚ùå"
        elif bid['order_status'] == 'active':
            status = "‚è≥ –í –ø—Ä–æ—Ü–µ—Å—Å–µ"
            status_emoji = "üü°"
        else:
            status = "üî¥ –ó–∞–≤–µ—Ä—à–µ–Ω–æ"
            status_emoji = "‚ö™"
        
        response += f"{status_emoji} **–ó–∞—è–≤–∫–∞ #{bid['order_id']}** - {status}\n"
        response += f"üíµ –í–∞—à–∞ —Ü–µ–Ω–∞: {bid['price']} —Ä—É–±.\n"
        
        if bid['order_status'] == 'completed' and bid['winning_price']:
            response += f"üèÜ –í—ã–∏–≥—Ä—ã—à–Ω–∞—è —Ü–µ–Ω–∞: {bid['winning_price']} —Ä—É–±.\n"
        
        response += f"üì¶ {bid['cargo_description'][:50]}{'...' if len(bid['cargo_description']) > 50 else ''}\n"
        response += f"üìç {bid['delivery_address'][:50]}{'...' if len(bid['delivery_address']) > 50 else ''}\n"
        response += f"ÔøΩ {bid['created_at'][:16]}\n\n"
    
    if len(response) > 4000:
        parts = []
        current_part = "üí∞ **–í–∞—à–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:**\n\n"
        
        for bid in bids:
            status = "üü° –í –ø—Ä–æ—Ü–µ—Å—Å–µ" if bid['order_status'] == 'active' else "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ"
            bid_text = f"**–ó–∞—è–≤–∫–∞ #{bid['order_id']}** - {status}\n"
            bid_text += f"üíµ {bid['price']} —Ä—É–±.\n\n"
            
            if len(current_part + bid_text) > 3500:
                parts.append(current_part)
                current_part = bid_text
            else:
                current_part += bid_text
        
        if current_part:
            parts.append(current_part)
        
        for part in parts:
            await message.answer(part)
    else:
        await message.answer(response)

@router.message(F.text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def main_menu(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    if not message.from_user:
        return
        
    user = await get_user_by_telegram_id(message.from_user.id)
    
    if not user:
        await message.answer(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–µ—Ä–≤–∏—Å –≥—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–æ–∫!\n\n"
            "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."
        )
        return
    
    if user['role'] == 'customer':
        await message.answer(
            f"üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n"
            f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user['name'] or '–∑–∞–∫–∞–∑—á–∏–∫'}!\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=get_customer_menu()
        )
    else:  # driver
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –º–∞—à–∏–Ω—ã –≤–æ–¥–∏—Ç–µ–ª—è
        from database.models import get_driver_vehicles
        vehicles = await get_driver_vehicles(user['id'])
        
        if vehicles:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –º–∞—à–∏–Ω
            vehicles_text = ""
            for vehicle in vehicles:
                truck_name = get_truck_display_name(vehicle['truck_type'])
                primary_mark = "‚≠ê " if vehicle['is_primary'] else "‚Ä¢ "
                vehicles_text += f"{primary_mark}{truck_name}\n"
        else:
            # –ï—Å–ª–∏ –Ω–µ—Ç –º–∞—à–∏–Ω –≤ –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä–æ–µ –ø–æ–ª–µ
            if user['truck_type']:
                vehicles_text = f"‚Ä¢ {get_truck_display_name(user['truck_type'])}\n"
            else:
                vehicles_text = "–ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –º–∞—à–∏–Ω\n"
        
        await message.answer(
            f"üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n"
            f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user['name'] or '–≤–æ–¥–∏—Ç–µ–ª—å'}!\n"
            f"–í–∞—à–∏ –º–∞—à–∏–Ω—ã:\n{vehicles_text}\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=get_driver_menu()
        )

@router.message(Command("help"))
async def help_command(message: Message):
    """–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º"""
    user = await get_user_by_telegram_id(message.from_user.id)
    
    help_text = (
        "üÜò **–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º**\n\n"
        "üìã **–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É / –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
    )
    
    if user:
        if user['role'] == 'customer':
            help_text += (
                "üë§ **–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–∫–∞–∑—á–∏–∫–∞:**\n"
                "üì¶ –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É –Ω–∞ –ø–µ—Ä–µ–≤–æ–∑–∫—É\n"
                "üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏ - –ü—Ä–æ—Å–º–æ—Ç—Ä –≤–∞—à–∏—Ö –∑–∞—è–≤–æ–∫\n\n"
            )
        else:  # driver
            help_text += (
                "üöö **–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≤–æ–¥–∏—Ç–µ–ª—è:**\n"
                "üöõ –í—ã–∏–≥—Ä–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏ - –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—ã–∏–≥—Ä–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫\n"
                "üí∞ –ú–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è - –ü—Ä–æ—Å–º–æ—Ç—Ä –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π\n\n"
            )
    
    help_text += (
        "‚è∞ **–°–∏—Å—Ç–µ–º–∞ –∞—É–∫—Ü–∏–æ–Ω–∞:**\n"
        "‚Ä¢ –í—Ä–µ–º—è –Ω–∞ –ø–æ–¥–∞—á—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: 5 –º–∏–Ω—É—Ç\n"
        "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã\n"
        "‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n\n"
        "üöö **–¢–∏–ø—ã –º–∞—à–∏–Ω:**\n"
        "‚Ä¢ üèóÔ∏è –ú–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä (5—Ç, 7—Ç, 10—Ç, 12—Ç, 20—Ç)\n"
        "‚Ä¢ üöê –ì–∞–∑–µ–ª—å (–æ—Ç–∫—Ä—ã—Ç–∞—è/–∑–∞–∫—Ä—ã—Ç–∞—è)\n"
        "‚Ä¢ üöõ –î–ª–∏–Ω–Ω–æ–º–µ—Ä (—Ç–µ–Ω—Ç/–ø–ª–æ—â–∞–¥–∫–∞)\n\n"
        "‚ùì –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
    )
    
    await message.answer(help_text)

@router.message(Command("menu"))
async def menu_command(message: Message):
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    if not message.from_user:
        return
        
    user = await get_user_by_telegram_id(message.from_user.id)
    
    if not user:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
        from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="üë§ –ó–∞–∫–∞–∑—á–∏–∫", callback_data="role_customer"),
                InlineKeyboardButton(text="üöö –í–æ–¥–∏—Ç–µ–ª—å", callback_data="role_driver")
            ]
        ])
        
        await message.answer(
            "üéâ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ FreightHub!** üéâ\n"
            "*–í–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π —Å–µ—Ä–≤–∏—Å –≥—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–æ–∫*\n\n"
            "üîπ **–î–ª—è –∑–∞–∫–∞–∑—á–∏–∫–æ–≤:**\n"
            "üì¶ –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –ø–µ—Ä–µ–≤–æ–∑–∫—É –≥—Ä—É–∑–∞\n"
            "üí∞ –í–æ–¥–∏—Ç–µ–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∞—Ç —Å–≤–æ–∏ —Ü–µ–Ω—ã –∑–∞ 5 –º–∏–Ω—É—Ç\n"
            "üèÜ –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–µ—Ä–µ—Ç –ª—É—á—à–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ\n"
            "üì± –ü–æ–ª—É—á–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ–±–µ–¥–∏—Ç–µ–ª—è\n\n"
            "üîπ **–î–ª—è –≤–æ–¥–∏—Ç–µ–ª–µ–π:**\n" 
            "üîî –ü–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–∫–∞—Ö\n"
            "‚ö° –£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –±—ã—Å—Ç—Ä—ã—Ö –∞—É–∫—Ü–∏–æ–Ω–∞—Ö\n"
            "üíµ –í—ã–∏–≥—Ä—ã–≤–∞–π—Ç–µ –∑–∞—è–≤–∫–∏ —Å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ–π —Ü–µ–Ω–æ–π\n"
            "üöó –£–ø—Ä–∞–≤–ª—è–π—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –º–∞—à–∏–Ω–∞–º–∏\n\n"
            "üëã **–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É —Ä–æ–ª—å –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:**",
            reply_markup=keyboard
        )
        return
    
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –º–µ–Ω—é
    if user['role'] == 'customer':
        from bot.keyboards import get_customer_menu
        await message.answer(
            f"üè† **–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é**\n\n"
            f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user['name'] or '–∑–∞–∫–∞–∑—á–∏–∫'}!\n\n"
            "üì¶ –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –≥—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–∫—É\n"
            "üìã –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å—Ç–∞—Ç—É—Å —Å–≤–æ–∏—Ö –∑–∞—è–≤–æ–∫\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=get_customer_menu()
        )
    else:  # driver
        from bot.keyboards import get_driver_menu
        from bot.config import get_truck_display_name
        from database.models import get_driver_vehicles
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –º–∞—à–∏–Ω—ã –≤–æ–¥–∏—Ç–µ–ª—è
        vehicles = await get_driver_vehicles(user['id'])
        
        if vehicles:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –º–∞—à–∏–Ω
            vehicles_text = ""
            for vehicle in vehicles:
                truck_name = get_truck_display_name(vehicle['truck_type'])
                primary_mark = "‚≠ê " if vehicle['is_primary'] else "‚Ä¢ "
                vehicles_text += f"{primary_mark}{truck_name}\n"
        else:
            # –ï—Å–ª–∏ –Ω–µ—Ç –º–∞—à–∏–Ω –≤ –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä–æ–µ –ø–æ–ª–µ
            if user['truck_type']:
                vehicles_text = f"‚Ä¢ {get_truck_display_name(user['truck_type'])}\n"
            else:
                vehicles_text = "–ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –º–∞—à–∏–Ω\n"
        
        await message.answer(
            f"üè† **–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é**\n\n"
            f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user['name'] or '–≤–æ–¥–∏—Ç–µ–ª—å'}!\n\n"
            f"üöö –í–∞—à–∏ –º–∞—à–∏–Ω—ã:\n{vehicles_text}\n"
            "üèÜ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –≤—ã–∏–≥—Ä–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏\n"
            "üí∞ –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å–≤–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è\n"
            "üöó –£–ø—Ä–∞–≤–ª—è–π—Ç–µ –≤–∞—à–∏–º–∏ –º–∞—à–∏–Ω–∞–º–∏\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=get_driver_menu()
        )

@router.message(Command("webapp"))
async def webapp_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    # –õ–æ–≥–∏—Ä—É–µ–º URL –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    print(f"[WEBAPP] –û—Ç–∫—Ä—ã–≤–∞–µ–º URL: {WEBAPP_URL}")
    
    web_app_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="üöõ –û—Ç–∫—Ä—ã—Ç—å FreightHub App",
            web_app=WebAppInfo(url=WEBAPP_URL)
        )]
    ])
    
    await message.answer(
        f"üöõ **FreightHub Mini App**\n\n"
        f"–£–¥–æ–±–Ω—ã–π –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞–º–∏:\n\n"
        f"‚Ä¢ üì¶ –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∑–∞—è–≤–∫–∏\n"
        f"‚Ä¢ üí∞ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è\n"
        f"‚Ä¢ üöõ –£–ø—Ä–∞–≤–ª—è–π—Ç–µ –∑–∞–∫–∞–∑–∞–º–∏\n\n"
        f"–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
        reply_markup=web_app_keyboard
    )

@router.message()
async def unknown_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    if not message.from_user:
        return
        
    user_id = message.from_user.id
    text = message.text if message.text else ""
    
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã admin, reset –∏ webapp - –æ–Ω–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤ –¥—Ä—É–≥–∏—Ö —Ö—ç–Ω–¥–ª–µ—Ä–∞—Ö
    if text.startswith(('/admin', '/reset', '/webapp')):
        print(f"[MISC] –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—É '{text}' –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    user = await get_user_by_telegram_id(user_id)
    
    if not user:
        # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
        
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üöÄ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É", callback_data="start_registration")]
        ])
        
        await message.answer(
            "üöö **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–µ—Ä–≤–∏—Å –≥—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–æ–∫!** üöö\n\n"
            "üîπ **–î–ª—è –∑–∞–∫–∞–∑—á–∏–∫–æ–≤:**\n"
            "‚Ä¢ –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –ø–µ—Ä–µ–≤–æ–∑–∫—É –≥—Ä—É–∑–∞\n"
            "‚Ä¢ –í–æ–¥–∏—Ç–µ–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∞—Ç —Å–≤–æ–∏ —Ü–µ–Ω—ã –∑–∞ 5 –º–∏–Ω—É—Ç\n"
            "‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–µ—Ä–µ—Ç –ª—É—á—à–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ\n\n"
            "üîπ **–î–ª—è –≤–æ–¥–∏—Ç–µ–ª–µ–π:**\n" 
            "‚Ä¢ –ü–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–∫–∞—Ö\n"
            "‚Ä¢ –£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –∞—É–∫—Ü–∏–æ–Ω–∞—Ö\n"
            "‚Ä¢ –í—ã–∏–≥—Ä—ã–≤–∞–π—Ç–µ –∑–∞–∫–∞–∑—ã —Å –≤—ã–≥–æ–¥–Ω–æ–π —Ü–µ–Ω–æ–π\n\n"
            "üëá –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:",
            reply_markup=keyboard
        )
        return
    
    print(f"[MISC] –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞/—Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: '{text}'")
        
    await message.answer(
        "ü§î –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏."
    )
